#
# *** DO NOT EDIT THIS FILE BY HAND ***
# This file was automatically generated on Sun Feb 10 19:54:19 2019
#  by libs/config/tools/generate.cpp
# Copyright John Maddock.
# Use, modification and distribution are subject to the 
# Boost Software License, Version 1.0. (See accompanying file 
# LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)

import modules ;
import path ; 


obj two_arg_use_facet : test_case.cpp : <define>TEST_BOOST_HAS_TWO_ARG_USE_FACET ;
obj bethreads : test_case.cpp : <define>TEST_BOOST_HAS_BETHREADS ;
obj clock_gettime : test_case.cpp : <define>TEST_BOOST_HAS_CLOCK_GETTIME ;
obj pragma_detect_mismatch : test_case.cpp : <define>TEST_BOOST_HAS_PRAGMA_DETECT_MISMATCH ;
obj dirent_h : test_case.cpp : <define>TEST_BOOST_HAS_DIRENT_H ;
obj expm1 : test_case.cpp : <define>TEST_BOOST_HAS_EXPM1 ;
obj float128 : test_case.cpp : <define>TEST_BOOST_HAS_FLOAT128 ;
obj ftime : test_case.cpp : <define>TEST_BOOST_HAS_FTIME ;
obj getsystemtimeasfiletime : test_case.cpp : <define>TEST_BOOST_HAS_GETSYSTEMTIMEASFILETIME ;
obj gettimeofday : test_case.cpp : <define>TEST_BOOST_HAS_GETTIMEOFDAY ;
obj hash : test_case.cpp : <define>TEST_BOOST_HAS_HASH ;
obj int128 : test_case.cpp : <define>TEST_BOOST_HAS_INT128 ;
obj log1p : test_case.cpp : <define>TEST_BOOST_HAS_LOG1P ;
obj long_long : test_case.cpp : <define>TEST_BOOST_HAS_LONG_LONG ;
obj macro_use_facet : test_case.cpp : <define>TEST_BOOST_HAS_MACRO_USE_FACET ;
obj ms_int64 : test_case.cpp : <define>TEST_BOOST_HAS_MS_INT64 ;
obj nanosleep : test_case.cpp : <define>TEST_BOOST_HAS_NANOSLEEP ;
obj nl_types_h : test_case.cpp : <define>TEST_BOOST_HAS_NL_TYPES_H ;
obj nrvo : test_case.cpp : <define>TEST_BOOST_HAS_NRVO ;
obj partial_std_allocator : test_case.cpp : <define>TEST_BOOST_HAS_PARTIAL_STD_ALLOCATOR ;
obj pthread_delay_np : test_case.cpp : <define>TEST_BOOST_HAS_PTHREAD_DELAY_NP ;
obj pthread_mutexattr_settype : test_case.cpp : <define>TEST_BOOST_HAS_PTHREAD_MUTEXATTR_SETTYPE ;
obj pthread_yield : test_case.cpp : <define>TEST_BOOST_HAS_PTHREAD_YIELD ;
obj pthreads : test_case.cpp : <define>TEST_BOOST_HAS_PTHREADS ;
obj rvalue_refs : test_case.cpp : <define>TEST_BOOST_HAS_RVALUE_REFS ;
obj sched_yield : test_case.cpp : <define>TEST_BOOST_HAS_SCHED_YIELD ;
obj sgi_type_traits : test_case.cpp : <define>TEST_BOOST_HAS_SGI_TYPE_TRAITS ;
obj sigaction : test_case.cpp : <define>TEST_BOOST_HAS_SIGACTION ;
obj slist : test_case.cpp : <define>TEST_BOOST_HAS_SLIST ;
obj static_assert : test_case.cpp : <define>TEST_BOOST_HAS_STATIC_ASSERT ;
obj stdint_h : test_case.cpp : <define>TEST_BOOST_HAS_STDINT_H ;
obj stlp_use_facet : test_case.cpp : <define>TEST_BOOST_HAS_STLP_USE_FACET ;
obj unistd_h : test_case.cpp : <define>TEST_BOOST_HAS_UNISTD_H ;
obj variadic_tmpl : test_case.cpp : <define>TEST_BOOST_HAS_VARIADIC_TMPL ;
obj boost_msvc6_member_templates : test_case.cpp : <define>TEST_BOOST_MSVC6_MEMBER_TEMPLATES ;
obj boost_msvc_std_iterator : test_case.cpp : <define>TEST_BOOST_MSVC_STD_ITERATOR ;
obj winthreads : test_case.cpp : <define>TEST_BOOST_HAS_WINTHREADS ;
obj adl_barrier : test_case.cpp : <define>TEST_BOOST_NO_ADL_BARRIER ;
obj argument_dependent_lookup : test_case.cpp : <define>TEST_BOOST_NO_ARGUMENT_DEPENDENT_LOOKUP ;
obj array_type_specializations : test_case.cpp : <define>TEST_BOOST_NO_ARRAY_TYPE_SPECIALIZATIONS ;
obj cxx11_auto_declarations : test_case.cpp : <define>TEST_BOOST_NO_CXX11_AUTO_DECLARATIONS ;
obj cxx11_auto_multideclarations : test_case.cpp : <define>TEST_BOOST_NO_CXX11_AUTO_MULTIDECLARATIONS ;
obj auto_ptr : test_case.cpp : <define>TEST_BOOST_NO_AUTO_PTR ;
obj boost_bcb_partial_specialization_bug : test_case.cpp : <define>TEST_BOOST_BCB_PARTIAL_SPECIALIZATION_BUG ;
obj cxx11_char16_t : test_case.cpp : <define>TEST_BOOST_NO_CXX11_CHAR16_T ;
obj cxx11_char32_t : test_case.cpp : <define>TEST_BOOST_NO_CXX11_CHAR32_T ;
obj complete_value_initialization : test_case.cpp : <define>TEST_BOOST_NO_COMPLETE_VALUE_INITIALIZATION ;
obj cxx11_constexpr : test_case.cpp : <define>TEST_BOOST_NO_CXX11_CONSTEXPR ;
obj ctype_functions : test_case.cpp : <define>TEST_BOOST_NO_CTYPE_FUNCTIONS ;
obj cv_specializations : test_case.cpp : <define>TEST_BOOST_NO_CV_SPECIALIZATIONS ;
obj cv_void_specializations : test_case.cpp : <define>TEST_BOOST_NO_CV_VOID_SPECIALIZATIONS ;
obj cwchar : test_case.cpp : <define>TEST_BOOST_NO_CWCHAR ;
obj cwctype : test_case.cpp : <define>TEST_BOOST_NO_CWCTYPE ;
obj cxx11_addressof : test_case.cpp : <define>TEST_BOOST_NO_CXX11_ADDRESSOF ;
obj cxx11_alignas : test_case.cpp : <define>TEST_BOOST_NO_CXX11_ALIGNAS ;
obj cxx11_allocator : test_case.cpp : <define>TEST_BOOST_NO_CXX11_ALLOCATOR ;
obj cxx11_atomic_smart_ptr : test_case.cpp : <define>TEST_BOOST_NO_CXX11_ATOMIC_SMART_PTR ;
obj cxx11_defaulted_moves : test_case.cpp : <define>TEST_BOOST_NO_CXX11_DEFAULTED_MOVES ;
obj cxx11_final : test_case.cpp : <define>TEST_BOOST_NO_CXX11_FINAL ;
obj cxx11_hdr_array : test_case.cpp : <define>TEST_BOOST_NO_CXX11_HDR_ARRAY ;
obj cxx11_hdr_atomic : test_case.cpp : <define>TEST_BOOST_NO_CXX11_HDR_ATOMIC ;
obj cxx11_hdr_chrono : test_case.cpp : <define>TEST_BOOST_NO_CXX11_HDR_CHRONO ;
obj cxx11_hdr_codecvt : test_case.cpp : <define>TEST_BOOST_NO_CXX11_HDR_CODECVT ;
obj cxx11_hdr_condition_variable : test_case.cpp : <define>TEST_BOOST_NO_CXX11_HDR_CONDITION_VARIABLE ;
obj cxx11_hdr_forward_list : test_case.cpp : <define>TEST_BOOST_NO_CXX11_HDR_FORWARD_LIST ;
obj cxx11_hdr_future : test_case.cpp : <define>TEST_BOOST_NO_CXX11_HDR_FUTURE ;
obj cxx11_hdr_initializer_list : test_case.cpp : <define>TEST_BOOST_NO_CXX11_HDR_INITIALIZER_LIST ;
obj cxx11_hdr_mutex : test_case.cpp : <define>TEST_BOOST_NO_CXX11_HDR_MUTEX ;
obj cxx11_hdr_random : test_case.cpp : <define>TEST_BOOST_NO_CXX11_HDR_RANDOM ;
obj cxx11_hdr_ratio : test_case.cpp : <define>TEST_BOOST_NO_CXX11_HDR_RATIO ;
obj cxx11_hdr_regex : test_case.cpp : <define>TEST_BOOST_NO_CXX11_HDR_REGEX ;
obj cxx11_hdr_system_error : test_case.cpp : <define>TEST_BOOST_NO_CXX11_HDR_SYSTEM_ERROR ;
obj cxx11_hdr_thread : test_case.cpp : <define>TEST_BOOST_NO_CXX11_HDR_THREAD ;
obj cxx11_hdr_tuple : test_case.cpp : <define>TEST_BOOST_NO_CXX11_HDR_TUPLE ;
obj cxx11_hdr_type_traits : test_case.cpp : <define>TEST_BOOST_NO_CXX11_HDR_TYPE_TRAITS ;
obj cxx11_hdr_typeindex : test_case.cpp : <define>TEST_BOOST_NO_CXX11_HDR_TYPEINDEX ;
obj cxx11_hdr_unordered_map : test_case.cpp : <define>TEST_BOOST_NO_CXX11_HDR_UNORDERED_MAP ;
obj cxx11_hdr_unordered_set : test_case.cpp : <define>TEST_BOOST_NO_CXX11_HDR_UNORDERED_SET ;
obj cxx11_inline_namespaces : test_case.cpp : <define>TEST_BOOST_NO_CXX11_INLINE_NAMESPACES ;
obj cxx11_non_public_defaulted_functions : test_case.cpp : <define>TEST_BOOST_NO_CXX11_NON_PUBLIC_DEFAULTED_FUNCTIONS ;
obj cxx11_numeric_limits : test_case.cpp : <define>TEST_BOOST_NO_CXX11_NUMERIC_LIMITS ;
obj cxx11_pointer_traits : test_case.cpp : <define>TEST_BOOST_NO_CXX11_POINTER_TRAITS ;
obj cxx11_ref_qualifiers : test_case.cpp : <define>TEST_BOOST_NO_CXX11_REF_QUALIFIERS ;
obj cxx11_sfinae_expr : test_case.cpp : <define>TEST_BOOST_NO_CXX11_SFINAE_EXPR ;
obj cxx11_smart_ptr : test_case.cpp : <define>TEST_BOOST_NO_CXX11_SMART_PTR ;
obj cxx11_std_align : test_case.cpp : <define>TEST_BOOST_NO_CXX11_STD_ALIGN ;
obj cxx11_thread_local : test_case.cpp : <define>TEST_BOOST_NO_CXX11_THREAD_LOCAL ;
obj cxx11_trailing_result_types : test_case.cpp : <define>TEST_BOOST_NO_CXX11_TRAILING_RESULT_TYPES ;
obj cxx11_user_defined_literals : test_case.cpp : <define>TEST_BOOST_NO_CXX11_USER_DEFINED_LITERALS ;
obj cxx14_binary_literals : test_case.cpp : <define>TEST_BOOST_NO_CXX14_BINARY_LITERALS ;
obj cxx14_constexpr : test_case.cpp : <define>TEST_BOOST_NO_CXX14_CONSTEXPR ;
obj cxx14_decltype_auto : test_case.cpp : <define>TEST_BOOST_NO_CXX14_DECLTYPE_AUTO ;
obj cxx14_digit_separators : test_case.cpp : <define>TEST_BOOST_NO_CXX14_DIGIT_SEPARATORS ;
obj cxx14_generic_lambdas : test_case.cpp : <define>TEST_BOOST_NO_CXX14_GENERIC_LAMBDAS ;
obj cxx14_hdr_shared_mutex : test_case.cpp : <define>TEST_BOOST_NO_CXX14_HDR_SHARED_MUTEX ;
obj cxx14_initialized_lambda_captures : test_case.cpp : <define>TEST_BOOST_NO_CXX14_INITIALIZED_LAMBDA_CAPTURES ;
obj cxx14_aggregate_nsdmi : test_case.cpp : <define>TEST_BOOST_NO_CXX14_AGGREGATE_NSDMI ;
obj cxx14_return_type_deduction : test_case.cpp : <define>TEST_BOOST_NO_CXX14_RETURN_TYPE_DEDUCTION ;
obj cxx14_std_exchange : test_case.cpp : <define>TEST_BOOST_NO_CXX14_STD_EXCHANGE ;
obj cxx14_variable_templates : test_case.cpp : <define>TEST_BOOST_NO_CXX14_VARIABLE_TEMPLATES ;
obj cxx17_fold_expressions : test_case.cpp : <define>TEST_BOOST_NO_CXX17_FOLD_EXPRESSIONS ;
obj cxx17_hdr_optional : test_case.cpp : <define>TEST_BOOST_NO_CXX17_HDR_OPTIONAL ;
obj cxx17_hdr_string_view : test_case.cpp : <define>TEST_BOOST_NO_CXX17_HDR_STRING_VIEW ;
obj cxx17_if_constexpr : test_case.cpp : <define>TEST_BOOST_NO_CXX17_IF_CONSTEXPR ;
obj cxx17_inline_variables : test_case.cpp : <define>TEST_BOOST_NO_CXX17_INLINE_VARIABLES ;
obj cxx17_iterator_traits : test_case.cpp : <define>TEST_BOOST_NO_CXX17_ITERATOR_TRAITS ;
obj cxx17_std_apply : test_case.cpp : <define>TEST_BOOST_NO_CXX17_STD_APPLY ;
obj cxx17_std_invoke : test_case.cpp : <define>TEST_BOOST_NO_CXX17_STD_INVOKE ;
obj cxx17_structured_bindings : test_case.cpp : <define>TEST_BOOST_NO_CXX17_STRUCTURED_BINDINGS ;
obj cxx98_binders : test_case.cpp : <define>TEST_BOOST_NO_CXX98_BINDERS ;
obj cxx98_function_base : test_case.cpp : <define>TEST_BOOST_NO_CXX98_FUNCTION_BASE ;
obj cxx98_random_shuffle : test_case.cpp : <define>TEST_BOOST_NO_CXX98_RANDOM_SHUFFLE ;
obj cxx11_hdr_functional : test_case.cpp : <define>TEST_BOOST_NO_CXX11_HDR_FUNCTIONAL ;
obj cxx11_decltype : test_case.cpp : <define>TEST_BOOST_NO_CXX11_DECLTYPE ;
obj cxx11_decltype_n3276 : test_case.cpp : <define>TEST_BOOST_NO_CXX11_DECLTYPE_N3276 ;
obj boost_deduced_typename : test_case.cpp : <define>TEST_BOOST_DEDUCED_TYPENAME ;
obj cxx11_defaulted_functions : test_case.cpp : <define>TEST_BOOST_NO_CXX11_DEFAULTED_FUNCTIONS ;
obj cxx11_deleted_functions : test_case.cpp : <define>TEST_BOOST_NO_CXX11_DELETED_FUNCTIONS ;
obj dependent_nested_derivations : test_case.cpp : <define>TEST_BOOST_NO_DEPENDENT_NESTED_DERIVATIONS ;
obj dependent_types_in_template_value_parameters : test_case.cpp : <define>TEST_BOOST_NO_DEPENDENT_TYPES_IN_TEMPLATE_VALUE_PARAMETERS ;
obj exception_std_namespace : test_case.cpp : <define>TEST_BOOST_NO_EXCEPTION_STD_NAMESPACE ;
obj exceptions : test_case.cpp : <define>TEST_BOOST_NO_EXCEPTIONS ;
obj explicit_function_template_arguments : test_case.cpp : <define>TEST_BOOST_NO_EXPLICIT_FUNCTION_TEMPLATE_ARGUMENTS ;
obj cxx11_explicit_conversion_operators : test_case.cpp : <define>TEST_BOOST_NO_CXX11_EXPLICIT_CONVERSION_OPERATORS ;
obj cxx11_extern_template : test_case.cpp : <define>TEST_BOOST_NO_CXX11_EXTERN_TEMPLATE ;
obj fenv_h : test_case.cpp : <define>TEST_BOOST_NO_FENV_H ;
obj cxx11_fixed_length_variadic_template_expansion_packs : test_case.cpp : <define>TEST_BOOST_NO_CXX11_FIXED_LENGTH_VARIADIC_TEMPLATE_EXPANSION_PACKS ;
obj function_template_ordering : test_case.cpp : <define>TEST_BOOST_NO_FUNCTION_TEMPLATE_ORDERING ;
obj cxx11_function_template_default_args : test_case.cpp : <define>TEST_BOOST_NO_CXX11_FUNCTION_TEMPLATE_DEFAULT_ARGS ;
obj function_type_specializations : test_case.cpp : <define>TEST_BOOST_NO_FUNCTION_TYPE_SPECIALIZATIONS ;
obj ms_int64_numeric_limits : test_case.cpp : <define>TEST_BOOST_NO_MS_INT64_NUMERIC_LIMITS ;
obj inclass_member_initialization : test_case.cpp : <define>TEST_BOOST_NO_INCLASS_MEMBER_INITIALIZATION ;
obj integral_int64_t : test_case.cpp : <define>TEST_BOOST_NO_INTEGRAL_INT64_T ;
obj iosfwd : test_case.cpp : <define>TEST_BOOST_NO_IOSFWD ;
obj iostream : test_case.cpp : <define>TEST_BOOST_NO_IOSTREAM ;
obj is_abstract : test_case.cpp : <define>TEST_BOOST_NO_IS_ABSTRACT ;
obj templated_iterator_constructors : test_case.cpp : <define>TEST_BOOST_NO_TEMPLATED_ITERATOR_CONSTRUCTORS ;
obj cxx11_lambdas : test_case.cpp : <define>TEST_BOOST_NO_CXX11_LAMBDAS ;
obj limits : test_case.cpp : <define>TEST_BOOST_NO_LIMITS ;
obj limits_compile_time_constants : test_case.cpp : <define>TEST_BOOST_NO_LIMITS_COMPILE_TIME_CONSTANTS ;
obj long_long_numeric_limits : test_case.cpp : <define>TEST_BOOST_NO_LONG_LONG_NUMERIC_LIMITS ;
obj member_function_specializations : test_case.cpp : <define>TEST_BOOST_NO_MEMBER_FUNCTION_SPECIALIZATIONS ;
obj member_template_keyword : test_case.cpp : <define>TEST_BOOST_NO_MEMBER_TEMPLATE_KEYWORD ;
obj pointer_to_member_template_parameters : test_case.cpp : <define>TEST_BOOST_NO_POINTER_TO_MEMBER_TEMPLATE_PARAMETERS ;
obj member_template_friends : test_case.cpp : <define>TEST_BOOST_NO_MEMBER_TEMPLATE_FRIENDS ;
obj member_templates : test_case.cpp : <define>TEST_BOOST_NO_MEMBER_TEMPLATES ;
obj nested_friendship : test_case.cpp : <define>TEST_BOOST_NO_NESTED_FRIENDSHIP ;
obj cxx11_noexcept : test_case.cpp : <define>TEST_BOOST_NO_CXX11_NOEXCEPT ;
obj cxx11_nullptr : test_case.cpp : <define>TEST_BOOST_NO_CXX11_NULLPTR ;
obj operators_in_namespace : test_case.cpp : <define>TEST_BOOST_NO_OPERATORS_IN_NAMESPACE ;
obj partial_specialization_implicit_default_args : test_case.cpp : <define>TEST_BOOST_NO_PARTIAL_SPECIALIZATION_IMPLICIT_DEFAULT_ARGS ;
obj template_partial_specialization : test_case.cpp : <define>TEST_BOOST_NO_TEMPLATE_PARTIAL_SPECIALIZATION ;
obj private_in_aggregate : test_case.cpp : <define>TEST_BOOST_NO_PRIVATE_IN_AGGREGATE ;
obj pointer_to_member_const : test_case.cpp : <define>TEST_BOOST_NO_POINTER_TO_MEMBER_CONST ;
obj cxx11_range_based_for : test_case.cpp : <define>TEST_BOOST_NO_CXX11_RANGE_BASED_FOR ;
obj cxx11_raw_literals : test_case.cpp : <define>TEST_BOOST_NO_CXX11_RAW_LITERALS ;
obj restrict_references : test_case.cpp : <define>TEST_BOOST_NO_RESTRICT_REFERENCES ;
obj unreachable_return_detection : test_case.cpp : <define>TEST_BOOST_NO_UNREACHABLE_RETURN_DETECTION ;
obj rtti : test_case.cpp : <define>TEST_BOOST_NO_RTTI ;
obj cxx11_rvalue_references : test_case.cpp : <define>TEST_BOOST_NO_CXX11_RVALUE_REFERENCES ;
obj cxx11_scoped_enums : test_case.cpp : <define>TEST_BOOST_NO_CXX11_SCOPED_ENUMS ;
obj sfinae : test_case.cpp : <define>TEST_BOOST_NO_SFINAE ;
obj sfinae_expr : test_case.cpp : <define>TEST_BOOST_NO_SFINAE_EXPR ;
obj stringstream : test_case.cpp : <define>TEST_BOOST_NO_STRINGSTREAM ;
obj cxx11_static_assert : test_case.cpp : <define>TEST_BOOST_NO_CXX11_STATIC_ASSERT ;
obj std_allocator : test_case.cpp : <define>TEST_BOOST_NO_STD_ALLOCATOR ;
obj std_distance : test_case.cpp : <define>TEST_BOOST_NO_STD_DISTANCE ;
obj std_iterator_traits : test_case.cpp : <define>TEST_BOOST_NO_STD_ITERATOR_TRAITS ;
obj std_iterator : test_case.cpp : <define>TEST_BOOST_NO_STD_ITERATOR ;
obj std_locale : test_case.cpp : <define>TEST_BOOST_NO_STD_LOCALE ;
obj std_messages : test_case.cpp : <define>TEST_BOOST_NO_STD_MESSAGES ;
obj std_min_max : test_case.cpp : <define>TEST_BOOST_NO_STD_MIN_MAX ;
obj std_output_iterator_assign : test_case.cpp : <define>TEST_BOOST_NO_STD_OUTPUT_ITERATOR_ASSIGN ;
obj std_typeinfo : test_case.cpp : <define>TEST_BOOST_NO_STD_TYPEINFO ;
obj std_use_facet : test_case.cpp : <define>TEST_BOOST_NO_STD_USE_FACET ;
obj std_wstreambuf : test_case.cpp : <define>TEST_BOOST_NO_STD_WSTREAMBUF ;
obj std_wstring : test_case.cpp : <define>TEST_BOOST_NO_STD_WSTRING ;
obj stdc_namespace : test_case.cpp : <define>TEST_BOOST_NO_STDC_NAMESPACE ;
obj swprintf : test_case.cpp : <define>TEST_BOOST_NO_SWPRINTF ;
obj cxx11_local_class_template_parameters : test_case.cpp : <define>TEST_BOOST_NO_CXX11_LOCAL_CLASS_TEMPLATE_PARAMETERS ;
obj cxx11_template_aliases : test_case.cpp : <define>TEST_BOOST_NO_CXX11_TEMPLATE_ALIASES ;
obj templated_iostreams : test_case.cpp : <define>TEST_BOOST_NO_TEMPLATED_IOSTREAMS ;
obj template_templates : test_case.cpp : <define>TEST_BOOST_NO_TEMPLATE_TEMPLATES ;
obj two_phase_name_lookup : test_case.cpp : <define>TEST_BOOST_NO_TWO_PHASE_NAME_LOOKUP ;
obj typeid : test_case.cpp : <define>TEST_BOOST_NO_TYPEID ;
obj typename_with_ctor : test_case.cpp : <define>TEST_BOOST_NO_TYPENAME_WITH_CTOR ;
obj cxx11_unicode_literals : test_case.cpp : <define>TEST_BOOST_NO_CXX11_UNICODE_LITERALS ;
obj cxx11_unified_initialization_syntax : test_case.cpp : <define>TEST_BOOST_NO_CXX11_UNIFIED_INITIALIZATION_SYNTAX ;
obj boost_function_scope_using_declaration_breaks_adl : test_case.cpp : <define>TEST_BOOST_FUNCTION_SCOPE_USING_DECLARATION_BREAKS_ADL ;
obj using_declaration_overloads_from_typename_base : test_case.cpp : <define>TEST_BOOST_NO_USING_DECLARATION_OVERLOADS_FROM_TYPENAME_BASE ;
obj using_template : test_case.cpp : <define>TEST_BOOST_NO_USING_TEMPLATE ;
obj cxx11_variadic_macros : test_case.cpp : <define>TEST_BOOST_NO_CXX11_VARIADIC_MACROS ;
obj cxx11_variadic_templates : test_case.cpp : <define>TEST_BOOST_NO_CXX11_VARIADIC_TEMPLATES ;
obj void_returns : test_case.cpp : <define>TEST_BOOST_NO_VOID_RETURNS ;
obj intrinsic_wchar_t : test_case.cpp : <define>TEST_BOOST_NO_INTRINSIC_WCHAR_T ;
obj cpp_impl_destroying_delete : std/cpp_impl_destroying_delete.cpp ;
obj cpp_lib_destroying_delete : std/cpp_lib_destroying_delete.cpp ;
obj cpp_char8_t : std/cpp_char8_t.cpp ;
obj cpp_impl_three_way_comparison : std/cpp_impl_three_way_comparison.cpp ;
obj cpp_lib_three_way_comparison : std/cpp_lib_three_way_comparison.cpp ;
obj cpp_conditional_explicit : std/cpp_conditional_explicit.cpp ;
obj cpp_nontype_template_parameter_class : std/cpp_nontype_template_parameter_class.cpp ;
obj cpp_lib_char8_t : std/cpp_lib_char8_t.cpp ;
obj cpp_lib_concepts : std/cpp_lib_concepts.cpp ;
obj cpp_lib_constexpr_swap_algorithms : std/cpp_lib_constexpr_swap_algorithms.cpp ;
obj cpp_lib_constexpr_misc : std/cpp_lib_constexpr_misc.cpp ;
obj cpp_lib_bind_front : std/cpp_lib_bind_front.cpp ;
obj cpp_lib_is_constant_evaluated : std/cpp_lib_is_constant_evaluated.cpp ;
obj cpp_lib_erase_if : std/cpp_lib_erase_if.cpp ;
obj cpp_lib_list_remove_return_type : std/cpp_lib_list_remove_return_type.cpp ;
obj cpp_lib_generic_unordered_lookup : std/cpp_lib_generic_unordered_lookup.cpp ;
obj cpp_lib_ranges : std/cpp_lib_ranges.cpp ;
obj cpp_lib_bit_cast : std/cpp_lib_bit_cast.cpp ;
obj cpp_lib_atomic_ref : std/cpp_lib_atomic_ref.cpp ;
obj cpp_hex_float : std/cpp_hex_float.cpp ;
obj cpp_inline_variables : std/cpp_inline_variables.cpp ;
obj cpp_aligned_new : std/cpp_aligned_new.cpp ;
obj cpp_guaranteed_copy_elision : std/cpp_guaranteed_copy_elision.cpp ;
obj cpp_noexcept_function_type : std/cpp_noexcept_function_type.cpp ;
obj cpp_fold_expressions : std/cpp_fold_expressions.cpp ;
obj cpp_capture_star_this : std/cpp_capture_star_this.cpp ;
obj cpp_if_constexpr : std/cpp_if_constexpr.cpp ;
obj cpp_deduction_guides : std/cpp_deduction_guides.cpp ;
obj cpp_nontype_template_parameter_auto : std/cpp_nontype_template_parameter_auto.cpp ;
obj cpp_namespace_attributes : std/cpp_namespace_attributes.cpp ;
obj cpp_enumerator_attributes : std/cpp_enumerator_attributes.cpp ;
obj cpp_variadic_using : std/cpp_variadic_using.cpp ;
obj cpp_structured_bindings : std/cpp_structured_bindings.cpp ;
obj cpp_aggregate_bases : std/cpp_aggregate_bases.cpp ;
obj cpp_nontype_template_args : std/cpp_nontype_template_args.cpp ;
obj cpp_template_template_args : std/cpp_template_template_args.cpp ;
obj cpp_lib_byte : std/cpp_lib_byte.cpp ;
obj cpp_lib_hardware_interference_size : std/cpp_lib_hardware_interference_size.cpp ;
obj cpp_lib_launder : std/cpp_lib_launder.cpp ;
obj cpp_lib_uncaught_exceptions : std/cpp_lib_uncaught_exceptions.cpp ;
obj cpp_lib_as_const : std/cpp_lib_as_const.cpp ;
obj cpp_lib_make_from_tuple : std/cpp_lib_make_from_tuple.cpp ;
obj cpp_lib_apply : std/cpp_lib_apply.cpp ;
obj cpp_lib_optional : std/cpp_lib_optional.cpp ;
obj cpp_lib_variant : std/cpp_lib_variant.cpp ;
obj cpp_lib_any : std/cpp_lib_any.cpp ;
obj cpp_lib_addressof_constexpr : std/cpp_lib_addressof_constexpr.cpp ;
obj cpp_lib_raw_memory_algorithms : std/cpp_lib_raw_memory_algorithms.cpp ;
obj cpp_lib_enable_shared_from_this : std/cpp_lib_enable_shared_from_this.cpp ;
obj cpp_lib_shared_ptr_weak_type : std/cpp_lib_shared_ptr_weak_type.cpp ;
obj cpp_lib_shared_ptr_arrays : std/cpp_lib_shared_ptr_arrays.cpp ;
obj cpp_lib_memory_resource : std/cpp_lib_memory_resource.cpp ;
obj cpp_lib_boyer_moore_searcher : std/cpp_lib_boyer_moore_searcher.cpp ;
obj cpp_lib_invoke : std/cpp_lib_invoke.cpp ;
obj cpp_lib_not_fn : std/cpp_lib_not_fn.cpp ;
obj cpp_lib_void_t : std/cpp_lib_void_t.cpp ;
obj cpp_lib_bool_constant : std/cpp_lib_bool_constant.cpp ;
obj cpp_lib_type_trait_variable_templates : std/cpp_lib_type_trait_variable_templates.cpp ;
obj cpp_lib_logical_traits : std/cpp_lib_logical_traits.cpp ;
obj cpp_lib_is_swappable : std/cpp_lib_is_swappable.cpp ;
obj cpp_lib_is_invocable : std/cpp_lib_is_invocable.cpp ;
obj cpp_lib_has_unique_object_representations : std/cpp_lib_has_unique_object_representations.cpp ;
obj cpp_lib_is_aggregate : std/cpp_lib_is_aggregate.cpp ;
obj cpp_lib_chrono : std/cpp_lib_chrono.cpp ;
obj cpp_lib_execution : std/cpp_lib_execution.cpp ;
obj cpp_lib_parallel_algorithm : std/cpp_lib_parallel_algorithm.cpp ;
obj cpp_lib_to_chars : std/cpp_lib_to_chars.cpp ;
obj cpp_lib_string_view : std/cpp_lib_string_view.cpp ;
obj cpp_lib_allocator_traits_is_always_equal : std/cpp_lib_allocator_traits_is_always_equal.cpp ;
obj cpp_lib_incomplete_container_elements : std/cpp_lib_incomplete_container_elements.cpp ;
obj cpp_lib_map_try_emplace : std/cpp_lib_map_try_emplace.cpp ;
obj cpp_lib_unordered_map_try_emplace : std/cpp_lib_unordered_map_try_emplace.cpp ;
obj cpp_lib_node_extract : std/cpp_lib_node_extract.cpp ;
obj cpp_lib_array_constexpr : std/cpp_lib_array_constexpr.cpp ;
obj cpp_lib_nonmember_container_access : std/cpp_lib_nonmember_container_access.cpp ;
obj cpp_lib_sample : std/cpp_lib_sample.cpp ;
obj cpp_lib_clamp : std/cpp_lib_clamp.cpp ;
obj cpp_lib_gcd_lcm : std/cpp_lib_gcd_lcm.cpp ;
obj cpp_lib_hypot : std/cpp_lib_hypot.cpp ;
obj cpp_lib_math_special_functions : std/cpp_lib_math_special_functions.cpp ;
obj cpp_lib_filesystem : std/cpp_lib_filesystem.cpp ;
obj cpp_lib_atomic_is_always_lock_free : std/cpp_lib_atomic_is_always_lock_free.cpp ;
obj cpp_lib_shared_mutex : std/cpp_lib_shared_mutex.cpp ;
obj cpp_lib_scoped_lock : std/cpp_lib_scoped_lock.cpp ;
obj cpp_binary_literals : std/cpp_binary_literals.cpp ;
obj cpp_init_captures : std/cpp_init_captures.cpp ;
obj cpp_generic_lambdas : std/cpp_generic_lambdas.cpp ;
obj cpp_sized_deallocation : std/cpp_sized_deallocation.cpp ;
obj cpp_decltype_auto : std/cpp_decltype_auto.cpp ;
obj cpp_return_type_deduction : std/cpp_return_type_deduction.cpp ;
obj cpp_aggregate_nsdmi : std/cpp_aggregate_nsdmi.cpp ;
obj cpp_variable_templates : std/cpp_variable_templates.cpp ;
obj cpp_lib_integer_sequence : std/cpp_lib_integer_sequence.cpp ;
obj cpp_lib_exchange_function : std/cpp_lib_exchange_function.cpp ;
obj cpp_lib_tuples_by_type : std/cpp_lib_tuples_by_type.cpp ;
obj cpp_lib_tuple_element_t : std/cpp_lib_tuple_element_t.cpp ;
obj cpp_lib_make_unique : std/cpp_lib_make_unique.cpp ;
obj cpp_lib_transparent_operators : std/cpp_lib_transparent_operators.cpp ;
obj cpp_lib_integral_constant_callable : std/cpp_lib_integral_constant_callable.cpp ;
obj cpp_lib_transformation_trait_aliases : std/cpp_lib_transformation_trait_aliases.cpp ;
obj cpp_lib_result_of_sfinae : std/cpp_lib_result_of_sfinae.cpp ;
obj cpp_lib_is_final : std/cpp_lib_is_final.cpp ;
obj cpp_lib_is_null_pointer : std/cpp_lib_is_null_pointer.cpp ;
obj cpp_lib_chrono_udls : std/cpp_lib_chrono_udls.cpp ;
obj cpp_lib_string_udls : std/cpp_lib_string_udls.cpp ;
obj cpp_lib_generic_associative_lookup : std/cpp_lib_generic_associative_lookup.cpp ;
obj cpp_lib_null_iterators : std/cpp_lib_null_iterators.cpp ;
obj cpp_lib_make_reverse_iterator : std/cpp_lib_make_reverse_iterator.cpp ;
obj cpp_lib_robust_nonmodifying_seq_ops : std/cpp_lib_robust_nonmodifying_seq_ops.cpp ;
obj cpp_lib_complex_udls : std/cpp_lib_complex_udls.cpp ;
obj cpp_lib_quoted_string_io : std/cpp_lib_quoted_string_io.cpp ;
obj cpp_lib_shared_timed_mutex : std/cpp_lib_shared_timed_mutex.cpp ;
obj cpp_unicode_characters : std/cpp_unicode_characters.cpp ;
obj cpp_raw_strings : std/cpp_raw_strings.cpp ;
obj cpp_unicode_literals : std/cpp_unicode_literals.cpp ;
obj cpp_user_defined_literals : std/cpp_user_defined_literals.cpp ;
obj cpp_threadsafe_static_init : std/cpp_threadsafe_static_init.cpp ;
obj cpp_lambdas : std/cpp_lambdas.cpp ;
obj cpp_constexpr : std/cpp_constexpr.cpp ;
obj cpp_range_based_for : std/cpp_range_based_for.cpp ;
obj cpp_static_assert : std/cpp_static_assert.cpp ;
obj cpp_decltype : std/cpp_decltype.cpp ;
obj cpp_attributes : std/cpp_attributes.cpp ;
obj cpp_rvalue_references : std/cpp_rvalue_references.cpp ;
obj cpp_variadic_templates : std/cpp_variadic_templates.cpp ;
obj cpp_initializer_lists : std/cpp_initializer_lists.cpp ;
obj cpp_explicit_conversion : std/cpp_explicit_conversion.cpp ;
obj cpp_delegating_constructors : std/cpp_delegating_constructors.cpp ;
obj cpp_nsdmi : std/cpp_nsdmi.cpp ;
obj cpp_inheriting_constructors : std/cpp_inheriting_constructors.cpp ;
obj cpp_ref_qualifiers : std/cpp_ref_qualifiers.cpp ;
obj cpp_alias_templates : std/cpp_alias_templates.cpp ;
obj cpp_rtti : std/cpp_rtti.cpp ;
obj cpp_exceptions : std/cpp_exceptions.cpp ;

